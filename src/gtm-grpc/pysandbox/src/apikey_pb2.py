# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: apikey.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='apikey.proto',
  package='apikey',
  syntax='proto3',
  serialized_pb=_b('\n\x0c\x61pikey.proto\x12\x06\x61pikey\"9\n\x0eKeyListRequest\x12\x14\n\x0cservice_name\x18\x01 \x01(\t\x12\x11\n\tteam_name\x18\x02 \x01(\t\"G\n\nKeyRequest\x12\x14\n\x0cservice_name\x18\x01 \x01(\t\x12\x10\n\x08key_name\x18\x02 \x01(\t\x12\x11\n\tteam_name\x18\x03 \x01(\t\"P\n\x06\x41piKey\x12\x14\n\x0cservice_name\x18\x01 \x01(\t\x12\x10\n\x08key_name\x18\x02 \x01(\t\x12\x0b\n\x03key\x18\x03 \x01(\t\x12\x11\n\tteam_name\x18\x04 \x01(\t\")\n\nApiKeyList\x12\x1b\n\x03key\x18\x01 \x03(\x0b\x32\x0e.apikey.ApiKey\"\x07\n\x05\x45mpty2\xb3\x01\n\x08\x41piKeyer\x12\x39\n\x11GenerateNewApiKey\x12\x12.apikey.KeyRequest\x1a\x0e.apikey.ApiKey\"\x00\x12/\n\x0cRevokeApiKey\x12\x0e.apikey.ApiKey\x1a\r.apikey.Empty\"\x00\x12;\n\x0bListApiKeys\x12\x16.apikey.KeyListRequest\x1a\x12.apikey.ApiKeyList\"\x00\x42)\n\x18\x63om.nordstrom.gtm.apikeyB\x0b\x41piKeyProtoP\x01\x62\x06proto3')
)




_KEYLISTREQUEST = _descriptor.Descriptor(
  name='KeyListRequest',
  full_name='apikey.KeyListRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='service_name', full_name='apikey.KeyListRequest.service_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='team_name', full_name='apikey.KeyListRequest.team_name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=24,
  serialized_end=81,
)


_KEYREQUEST = _descriptor.Descriptor(
  name='KeyRequest',
  full_name='apikey.KeyRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='service_name', full_name='apikey.KeyRequest.service_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='key_name', full_name='apikey.KeyRequest.key_name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='team_name', full_name='apikey.KeyRequest.team_name', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=83,
  serialized_end=154,
)


_APIKEY = _descriptor.Descriptor(
  name='ApiKey',
  full_name='apikey.ApiKey',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='service_name', full_name='apikey.ApiKey.service_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='key_name', full_name='apikey.ApiKey.key_name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='key', full_name='apikey.ApiKey.key', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='team_name', full_name='apikey.ApiKey.team_name', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=156,
  serialized_end=236,
)


_APIKEYLIST = _descriptor.Descriptor(
  name='ApiKeyList',
  full_name='apikey.ApiKeyList',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='apikey.ApiKeyList.key', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=238,
  serialized_end=279,
)


_EMPTY = _descriptor.Descriptor(
  name='Empty',
  full_name='apikey.Empty',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=281,
  serialized_end=288,
)

_APIKEYLIST.fields_by_name['key'].message_type = _APIKEY
DESCRIPTOR.message_types_by_name['KeyListRequest'] = _KEYLISTREQUEST
DESCRIPTOR.message_types_by_name['KeyRequest'] = _KEYREQUEST
DESCRIPTOR.message_types_by_name['ApiKey'] = _APIKEY
DESCRIPTOR.message_types_by_name['ApiKeyList'] = _APIKEYLIST
DESCRIPTOR.message_types_by_name['Empty'] = _EMPTY
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

KeyListRequest = _reflection.GeneratedProtocolMessageType('KeyListRequest', (_message.Message,), dict(
  DESCRIPTOR = _KEYLISTREQUEST,
  __module__ = 'apikey_pb2'
  # @@protoc_insertion_point(class_scope:apikey.KeyListRequest)
  ))
_sym_db.RegisterMessage(KeyListRequest)

KeyRequest = _reflection.GeneratedProtocolMessageType('KeyRequest', (_message.Message,), dict(
  DESCRIPTOR = _KEYREQUEST,
  __module__ = 'apikey_pb2'
  # @@protoc_insertion_point(class_scope:apikey.KeyRequest)
  ))
_sym_db.RegisterMessage(KeyRequest)

ApiKey = _reflection.GeneratedProtocolMessageType('ApiKey', (_message.Message,), dict(
  DESCRIPTOR = _APIKEY,
  __module__ = 'apikey_pb2'
  # @@protoc_insertion_point(class_scope:apikey.ApiKey)
  ))
_sym_db.RegisterMessage(ApiKey)

ApiKeyList = _reflection.GeneratedProtocolMessageType('ApiKeyList', (_message.Message,), dict(
  DESCRIPTOR = _APIKEYLIST,
  __module__ = 'apikey_pb2'
  # @@protoc_insertion_point(class_scope:apikey.ApiKeyList)
  ))
_sym_db.RegisterMessage(ApiKeyList)

Empty = _reflection.GeneratedProtocolMessageType('Empty', (_message.Message,), dict(
  DESCRIPTOR = _EMPTY,
  __module__ = 'apikey_pb2'
  # @@protoc_insertion_point(class_scope:apikey.Empty)
  ))
_sym_db.RegisterMessage(Empty)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\030com.nordstrom.gtm.apikeyB\013ApiKeyProtoP\001'))

_APIKEYER = _descriptor.ServiceDescriptor(
  name='ApiKeyer',
  full_name='apikey.ApiKeyer',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=291,
  serialized_end=470,
  methods=[
  _descriptor.MethodDescriptor(
    name='GenerateNewApiKey',
    full_name='apikey.ApiKeyer.GenerateNewApiKey',
    index=0,
    containing_service=None,
    input_type=_KEYREQUEST,
    output_type=_APIKEY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='RevokeApiKey',
    full_name='apikey.ApiKeyer.RevokeApiKey',
    index=1,
    containing_service=None,
    input_type=_APIKEY,
    output_type=_EMPTY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='ListApiKeys',
    full_name='apikey.ApiKeyer.ListApiKeys',
    index=2,
    containing_service=None,
    input_type=_KEYLISTREQUEST,
    output_type=_APIKEYLIST,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_APIKEYER)

DESCRIPTOR.services_by_name['ApiKeyer'] = _APIKEYER

# @@protoc_insertion_point(module_scope)
