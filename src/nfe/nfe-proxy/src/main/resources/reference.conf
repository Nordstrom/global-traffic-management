nfe {
  application = ${xio.applicationTemplate} {
    name = "nfe"
    servers {
      nfe-main = ${xio.serverTemplate} {
        name = "nfe-main"
        settings {
          bindPort = 8080
        }
      }
    }
    settings {
      configurationUpdateServer {
        enabled = false
      }
      zookeeper {
        cluster = ""
      }
    }
  }

  content {
    routes {
    }
  }

  apiKeys = []

  proxy {
    routes = [
    ]
  }

  proxyRouteTemplate = ${xio.routeTemplate} {
    methods = [
      OPTIONS,
      GET,
      HEAD,
      POST,
      PUT,
      PATCH,
      DELETE,
      TRACE,
      CONNECT
    ]
    host = ""
    path = "/"
    permissionNeeded = "none"
    // The Gatekeeper/Shiro permission needed to proxy a route.
    // 'none' and 'apikey:encoded_path' are special cases.
    //
    // 'none' = no permission required to proxy route (gatekeeper is bypassed)
    // 'apikey:encoded_path' = An apikey is required and the route path (team/service) is encoded
    //                         into a permission. The apikey header value is used as the
    //                         Gatekeeper/Shiro "subject".
    //  e.g. '/v1/teamyo/slapservice/api/v1/fives/' will be encoded as 'apikey:teamyo:slapservice:*'
    //
    // Any other value is considered a Gatekeeper/Shiro permission where the "subject" is
    // determined by the mutual authenticated TLS peer identity.
    // e.g. 'foo' 'foo:bar''foo:bar:*'

    proxyHostPolicy = "UseRequestHeader"
    proxyHost = ""
    proxyPath = "/"
    clients = []
  }

  h1ProxyClient = ${xio.clientTemplate} {
    settings {
      tls {
        alpn {
          supportedProtocols = [
            "http/1.1"
          ]
        }
      }
    }
  }

  h2ProxyClient = ${xio.clientTemplate} {
  }

  nlpClient = ${xio.clientTemplate} {
    remotePort = 443
    idleTimeoutEnabled = false
    idleTimeoutDuration = 0
    settings {
      messageLoggerEnabled = false
    }
  }

  coreDatabase = {
    host = "127.0.0.1"
    port = 8888
    tls = ${xio.clientTemplate.settings.tls}
  }

  gatekeeper {
    host = "127.0.0.1"
    port = "7777"
  }

  nlpSharedCount {
    attemptsToStartMax = 2
    attemptsToUpdateMax = 2
  }

  serviceDeployment {
    // TODO(BR): Move this to a Secure Parameter Store
    url = "jdbc:mysql://localhost:3306/nlpRouteInformation?useSSL=false&serverTimezone=UTC&useJDBCCompliantTimezoneShift=true&allowMultiQueries=true"
    user = "root"
    password = "test123"
  }

  kubernetesRouting {
    reservedNlpPort = 31313
  }
}
