plugins {
    id 'application'
    id 'maven-publish'
    id 'com.jfrog.artifactory'
    id 'nebula.ospackage-application' version '4.8.0'
    id 'com.github.sherter.google-java-format'
}

mainClassName = "com.nordstrom.gatekeeper.Main"
applicationDefaultJvmArgs = []

task runServer(type: JavaExec) {
    // Note: This gradle task is for running the gatekeeper server connected to a DynamoDbLocal instance.
    // See docker/dynamo-local/README.md for instruction for running DynamoDbLocal via docker.
    classpath = sourceSets.main.runtimeClasspath

    main = 'com.nordstrom.gatekeeper.Main'
    environment("LOCAL_DYNAMO_HOST", "localhost")
    environment("GATEKEEPER-ENV", "DEV")
}

dependencies {
    /* xio tls config */
    implementation group: 'com.xjeffrose', name: 'xio-tls', version: xio_version
    implementation group: 'com.xjeffrose', name: 'xio-zookeeper', version: xio_version
    implementation group: 'com.typesafe', name: 'config', version: typesafe_config_version

    /* Gatekeeper gRPC */
    implementation group: 'com.nordstrom.gtm', name: 'gatekeeper-grpc', version: gtm_grpc_version

    /* Apache Shiro */
    implementation group: 'org.apache.shiro', name: 'shiro-core', version: shiro_version

    /* rxjava */
    implementation group: 'io.reactivex.rxjava2', name: 'rxjava', version: rx_java_version

    /* DynamoDb */
    implementation group: 'com.amazonaws', name: 'aws-java-sdk-dynamodb', version: '1.11.373'

    /* Logging */
    implementation group: 'org.slf4j', name: 'slf4j-api', version: slf4j_version
    implementation group: 'org.slf4j', name: 'jul-to-slf4j', version: slf4j_version
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: logback_version
    implementation group: 'ch.qos.logback', name: 'logback-core', version: logback_version
    implementation group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: logstash_encoder_version
    implementation group: 'org.codehaus.groovy', name: 'groovy-all', version: groovy_version
    annotationProcessor "org.projectlombok:lombok:$lombok_version"
    implementation group: 'org.projectlombok', name: 'lombok', version: lombok_version

    /* Netty */
    implementation group: 'io.netty', name: 'netty-all', version: netty_version
    implementation group: 'io.netty', name: 'netty-tcnative-boringssl-static', version: netty_boring_ssl_version
    implementation group: 'io.netty', name: 'netty-codec-http', version: netty_version

    /* gRPC */
    implementation group: 'com.google.protobuf', name: 'protobuf-java', version: protobuf_version
    implementation group: 'io.grpc', name: 'grpc-core', version: grpc_version
    implementation group: 'io.grpc', name: 'grpc-protobuf', version: grpc_version
    implementation group: 'io.grpc', name: 'grpc-stub', version: grpc_version
    implementation group: 'io.grpc', name: 'grpc-netty', version: grpc_version

    /* Test */
    testImplementation project(":gatekeeper-testing")
}

ospackage {
    packageName = 'gatekeeper'
    version = project.version
    release = '1'

    requires('supervisor')
    requires('openjdk-8-jre-headless')
    requires('ca-certificates-java')
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId project.group
            artifactId "gatekeeper-server"
            version project.version
            from components.java
            pom {
                name = "GTM Gatekeeper Server"
                description = "This is the GTM Gatekeeper gRPC Server"
                url = "https://gitlab.yourdomain.com/gtm/gatekeeper"
            }
        }
    }
}

artifactory {
    contextUrl = "https://artifactory.yourdomain.com/artifactory/"
    publish {
        repository {
            repoKey = 'maven-local'
            username = artifactory_user
            password = artifactory_api_key
            maven = true
        }
        defaults {
            publications('maven') //this refers to publishing.publications.maven up above ^^^
        }
    }
}
